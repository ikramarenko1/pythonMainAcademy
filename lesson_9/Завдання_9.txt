Змінні: Створіть змінну "x" і присвойте їй значення 10. Потім виведіть її значення на екран.

Числа: Обчисліть площу прямокутника з довжиною 5 і шириною 3. Результат виведіть на екран.

Рядки: Створіть рядок "Hello, world!" і виведіть його на екран.

Списки: Створіть список "fruits" з елементами "apple", "banana" і "orange". Виведіть цей список на екран.

Словники: Створіть словник "ages" з ключами "John" і "Alice" та значеннями 25 і 30 відповідно. Виведіть вік Alice на екран.

Кортежі: Створіть кортеж з трьох елементів: 1, 2 та 3. Перевірте, чи є число 2 в цьому кортежі.

Множини: Створіть множину "set1" з елементами 1, 2 та 3, і множину "set2" з елементами 3, 4 та 5. Об'єднайте ці дві множини і виведіть результат.

Читання з файлу: Створіть текстовий файл "example.txt" і запишіть у нього декілька рядків тексту. Потім відкрийте цей файл і виведіть його вміст на екран.

Запис у файл: Створіть список "names" з іменами "John", "Alice" та "Bob". Запишіть цей список в текстовий файл "names.txt", кожне ім'я на окремому рядку.

Обчислення: Обчисліть суму чисел від 1 до 10 (включно) і виведіть результат.

Зріз рядка: Задано рядок "Hello, world!". Виведіть перші 5 символів цього рядка.

Операції зі списками: Створіть список "numbers" з чисел від 1 до 5. Додайте число 6 в кінець списку і видаліть перше число з нього. Виведіть оновлений список.

Перевірка ключа: Створіть словник "grades" з ключами "Math" і "History" та відповідними значеннями 90 і 85. Перевірте, чи є ключ "Science" у словнику "grades".

Пошук у списку: Створіть список "numbers" з чисел від 1 до 10. Перевірте, чи є число 8 в цьому списку.

Читання та обробка файлу: Створіть текстовий файл "data.txt", де кожен рядок містить число. Зчитайте ці числа з файлу, обчисліть їх середнє значення та виведіть на екран.



Середні(трішки важкі)
Змінні: Створіть програму, яка зчитує ім'я користувача з консолі, а потім привітає його/її з використанням змінної.

Числа: Напишіть функцію, яка знаходить всі прості числа в заданому діапазоні від 1 до N, де N - вхідний параметр функції.

Рядки: Створіть програму, яка приймає рядок від користувача та перевіряє, чи є він паліндромом (читається однаково зліва направо та справа наліво).

Списки: Напишіть функцію, яка приймає список чисел і повертає новий список, де кожен елемент - квадрат відповідного числа вхідного списку.

Словники: Створіть програму, яка приймає рядок від користувача та підраховує кількість кожної літери в рядку, записуючи результат у словник, де ключі - літери, а значення - кількість їх зустрічань.

Кортежі: Напишіть функцію, яка приймає два кортежі однакового розміру та повертає новий кортеж, який складається з сум елементів на відповідних позиціях у вхідних кортежах.

Множини: Створіть програму, яка зчитує два списки від користувача та повертає їх перетин, об'єднання та різницю у вигляді множин.

Читання з файлу: Створіть функцію, яка зчитує числа з текстового файлу "numbers.txt", сортує їх у порядку спадання та записує в інший файл "sorted_numbers.txt".

Запис у файл: Напишіть програму, яка зчитує великий текстовий файл "big_file.txt" та створює новий файл "shortened_file.txt", в якому кожен рядок містить не більше 50 символів.

Обчислення: Напишіть функцію, яка знаходить факторіал заданого числа N рекурсивно.

Зріз рядка: Створіть програму, яка приймає рядок від користувача та виводить на екран кожну другу літеру цього рядка.

Операції зі списками: Напишіть функцію, яка приймає список слів та повертає список, в якому кожне слово написано задом наперед.

Перевірка ключа: Створіть програму, яка приймає текстовий файл "grades.txt" зі списком студентів і їх оцінками. Зчитайте файл та перевірте, чи є у ньому запис про певного студента за іменем.

Пошук у списку: Напишіть функцію для сортування списку чисел методом бульбашки (bubble sort).

Читання та обробка файлу: Створіть програму, яка зчитує текстовий файл "data.csv" з даними у форматі CSV (Comma-Separated Values) та обчислює середнє значення чисел у кожному рядку, записуючи результати у новий файл "averages.txt".


Важка

Шифрування Цезаря: Реалізуйте алгоритм шифрування Цезаря, який шифрує текст з використанням ключа (зсуву) та розшифровує зашифрований текст.

