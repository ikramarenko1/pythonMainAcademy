✅ Створення та використання модулю:
Створіть власний файл модуля (наприклад, my_module.py) з функцією, яка виконує додавання чисел. Потім створіть інший файл, де імпортується ця функція та використовується для обчислення суми двох чисел.

✅ Організація імпортів:
Створіть кілька модулів у папці modules, кожен з яких містить функції для виконання певної операції (наприклад, math_operations.py, string_operations.py). Потім створіть головний файл main.py, де імпортується функції з цих модулів та використовується для обчислень.

✅ Аліаси та груповий імпорт:
Створіть два модулі (наприклад, module1.py і module2.py), кожний з яких містить по одній функції. У головному файлі main.py зробіть груповий імпорт функцій з обох модулів з аліасами. Використовуйте аліаси для зручного звертання до функцій.

✅ Управління залежностями з pip:
Створіть віртуальне середовище для проекту. Встановіть в ньому сторонні бібліотеки, такі як requests або numpy, за допомогою команди pip install. Потім створіть файл requirements.txt, в якому перерахуйте бібліотеки, встановлені в віртуальному середовищі. Спробуйте створити нове віртуальне середовище із заданими залежностями за допомогою pip install -r requirements.txt.

✅ Локальні та глобальні імпорти:
Створіть два файли: local_module.py та global_module.py. У local_module.py створіть функцію. У global_module.py імпортуйте цю функцію і використовуйте її. Вивчіть, які імена доступні в глобальному просторі імен та які - в локальному.

✅ Використання __init__.py для пакетів:
Створіть папку my_package і всередині неї два файли: module1.py та module2.py. У __init__.py вказати, які модулі повинні бути доступні при імпорті пакету. В module1.py та module2.py створіть функції. У головному файлі програми імпортуйте та використовуйте функції з пакету.
