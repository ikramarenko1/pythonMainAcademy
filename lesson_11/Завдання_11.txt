Легкі:
✅ Підрахунок парних чисел: Знайти і вивести всі парні числа в заданому діапазоні.

✅ Паліндром: Перевірити, чи задане слово є паліндромом (читається однаково зліва направо та справа наліво).

✅ Таблиця множення: Вивести на екран таблицю множення для заданого числа.

✅ Факторіал числа: Знайти факторіал заданого натурального числа.

✅ Пошук простих чисел: Знайти і вивести всі прості числа у заданому діапазоні.

✅ Сума цифр числа: Обчислити суму цифр заданого числа.

✅ Числа Фібоначчі: Вивести на екран перші N чисел Фібоначчі.

✅ Знаходження найбільшого спільного дільника (НСД): Знайти НСД двох заданих чисел.

✅ Відшукання найменшого спільного кратного (НСК): Знайти НСК двох заданих чисел.

Середні:
✅ Пошук простого числа N:
Попросіть користувача ввести число N і знайдіть N-те просте число.

✅ Гра вгадай число:
Створіть гру, в якій комп'ютер вибирає випадкове число, а користувач повинен вгадати його, отримуючи підказки "більше" або "менше".

✅ Обчислення числа Пі:
Використовуючи ряд Лейбніца або інший, обчисліть наближене значення числа Пі.

✅ Розклад числа на прості множники:
Попросіть користувача ввести число і розкладіть його на прості множники.

✅ Знаходження простих чисел до N:
Попросіть користувача ввести число N і знайдіть всі прості числа, менші або рівні N.

✅ Послідовність Фібоначчі:
Створіть функцію, яка генерує послідовність Фібоначчі до певного N-го члена.

✅ Підрахунок слів у рядку:
Попросіть користувача ввести рядок і підрахуйте кількість слів у цьому рядку.

✅ Конвертер числа в римську систему числення:
Напишіть програму, яка приймає десяткове число і перетворює його на римську систему числення.

✅ Гра "Камінь, ножиці, папір":
Створіть гру, в якій користувач грає проти комп'ютера у відому гру "Камінь, ножиці, папір".

Симуляція гри "Життя":
Реалізуйте симуляцію гри "Життя" Конвея на квадратній клітинці.


ВАЖКІ:
✅ Знаходження найбільшого спільного дільника (НСД) двох чисел:
У цій задачі ми використовуємо алгоритм Евкліда для знаходження НСД двох чисел. Використовується цикл while для ітеративного знаходження залишку від ділення одного числа на інше, доки одне з чисел не стане рівним нулю. Останнє ненульове число буде НСД.

✅ Реалізація алгоритму сортування QuickSort:
QuickSort - це швидкий алгоритм сортування, який використовує рекурсію. У цій задачі ми розбиваємо масив на менші частини за допомогою опорного елементу (пивота) і рекурсивно сортуємо ці підмасиви.

Розв'язання задачі комівояжера (Travelling Salesman Problem):
Ми вирішуємо відому комбінаторну задачу, знаходячи найкоротший шлях, що проходить через всі міста і повертається в початкове місто. Використовуємо жадібний підхід, обираючи найближчого сусіда на кожному кроці.

✅ Гра "Двадцять одно" (Blackjack):
Ми реалізуємо просту версію гри "Двадцять одно", де гравець може брати картки і намагатися набрати 21 очко. Використовуємо цикли для управління ходом гри та взаємодії з гравцем.

✅ Імітація простого вірусу:
У цій задачі ми створюємо простий вірус, який "інфікує" файли у вказаному каталозі, додаючи до них певний код. Використовуємо цикли та функції для обробки файлів та додавання коду.

Реалізація алгоритму шифрування RSA:
RSA - це асиметричний алгоритм шифрування. В цій задачі ми генеруємо ключі, шифруємо та розшифровуємо повідомлення. Використовуємо цикли для обчислень та взаємодії з користувачем.

✅ Реалізація алгоритму сортування за допомогою злиття (Merge Sort):
Злиття - це алгоритм сортування, який базується на розділенні масиву на підмасиви, сортуванні їх окремо та об'єднанні відсортованих підмасивів. Ми використовуємо цикли для розділення та злиття підмасивів.