Легкі
✅ Ділення на 0: Напишіть програму, яка приймає два числа від користувача та виводить результат їх ділення. Врахуйте випадок ділення на 0, і виведіть відповідне повідомлення.

✅ Конвертер валют: Реалізуйте програму-конвертер валют, яка перетворює суму з однієї валюти в іншу. Обробте можливі помилки, наприклад, введення некоректних значень або недоступності валютного курсу.

✅ Читання файлу: Напишіть програму, яка читає вміст файлу, назва якого вводиться користувачем. Обробте випадок, коли файл не існує.

✅ Обчислення кореня: Реалізуйте обчислення квадратного кореня числа, яке вводить користувач. Обробте можливі помилки, такі як введення від'ємного числа.

✅ Пошук елементу в списку: Напишіть програму, яка шукає певний елемент у списку, введеному користувачем. Обробте випадок, коли такого елементу немає в списку.

✅ Перевірка пароля: Реалізуйте програму, яка перевіряє введений користувачем пароль. Обробте випадок, коли введений пароль не відповідає певим критеріям безпеки.

✅ Обчислення середнього: Напишіть програму, яка обчислює середнє арифметичне чисел зі списку, введеного користувачем. Обробте випадок, коли список пустий.

✅ Робота зі списками: Реалізуйте програму, яка дозволяє користувачеві додавати та видаляти елементи зі списку. Обробте можливі помилки, які можуть виникнути при доступі до індексу, який не існує.

✅ Калькулятор операцій: Напишіть програму-калькулятор, яка дозволяє користувачеві вводити операцію та два числа. Обробте випадок, коли користувач вводить некоректну операцію.

✅ Перетворення рядка в число: Реалізуйте програму, яка перетворює введений користувачем рядок в ціле число. Обробте випадок, коли рядок не може бути перетворений в число.

Cередні
Контроль введення: Напишіть програму, яка виводить на екран повідомлення "Привіт!" лише тоді, коли користувач вводить слово "hello". Якщо введення не відповідає цьому слову, виведіть повідомлення "Невідомий ввід".

Перетворення рядка: Реалізуйте програму, яка приймає рядок від користувача та намагається перетворити його в ціле число. Якщо це не вдається, виведіть повідомлення "Неможливо перетворити в число".

Пошук найбільшого числа: Напишіть програму, яка приймає список чисел від користувача та знаходить найбільше число у списку. Обробте випадок, коли список порожній, виведіть повідомлення "Список порожній".

Конвертер одиниць: Реалізуйте програму-конвертер одиниць довжини, яка перетворює метри в футові. Обробте випадок, коли користувач вводить від'ємне число, і виведіть повідомлення "Некоректне значення".

Обчислення середнього: Напишіть програму, яка обчислює середнє арифметичне чисел з файлу "numbers.txt". Обробте випадок, коли файл не знайдено, і виведіть повідомлення "Файл не існує".

Калькулятор з історією: Створіть програму-калькулятор, яка дозволяє користувачеві вводити операцію та два числа. Зберігайте історію обчислень у файлі "history.txt". Обробте можливу помилку запису до файлу.

Перевірка діапазону: Напишіть функцію, яка приймає число від користувача та перевіряє, чи воно знаходиться в діапазоні від 1 до 10. Якщо число відповідає діапазону, виведіть повідомлення "Число в діапазоні". Якщо ні, виведіть повідомлення "Число поза діапазоном".

Контроль паролю: Реалізуйте програму, яка вимагає введення пароля від користувача. Перевірте, чи введений пароль відповідає певим критеріям безпеки. Якщо ні, виведіть повідомлення "Пароль ненадійний".

Генерація випадкового числа: Напишіть програму, яка генерує випадкове число від 1 до 100. Попросіть користувача вгадати число. Виведіть повідомлення "Вітаємо, ви вгадали!" або "Спробуйте ще раз!" в залежності від результату.

Пошук файлів: Створіть програму, яка шукає всі файли з розширенням ".txt" у вказаній директорії. Виведіть на екран список знайдених файлів. Обробте випадок, коли директорія не існує, і виведіть повідомлення "Директорія не знайдена".


ВАЖКІ
Обробка даних з API:
Напишіть програму, яка отримує дані з публічного API, наприклад, з веб-сервісу, який надає інформацію про погоду. Врахуйте можливість виникнення помилок під час з'єднання з API або некоректної відповіді. Обробте ці помилки та виведіть відповідні повідомлення.

База даних та транзакції:
Створіть програму для роботи з базою даних, яка дозволяє додавати та оновлювати записи. Реалізуйте механізм транзакцій, який дозволяє відмінити зміни у випадку виникнення помилки під час виконання транзакції.

Аутентифікація та авторизація:
Створіть систему аутентифікації та авторизації користувачів. Обробте помилки, пов'язані з некоректними або відсутніми обліковими записами, недостатнім рівнем доступу та іншими ситуаціями.

Асинхронний код:
Реалізуйте асинхронну програму, яка виконує паралельні завдання. Обробте помилки, пов'язані з асинхронним виконанням, такі як втрата з'єднання, тайм-аути тощо.

Великі об'єми даних:
Напишіть програму для обробки великих об'ємів даних, таких як логи або файлові записи. Реалізуйте механізми оптимізації пам'яті та обробки даних у частинних блоках.

Мережеві операції:
Створіть програму для мережевої взаємодії, наприклад, передачі файлів через мережу. Обробте помилки, пов'язані з втратою з'єднання, помилковими даними та іншими ситуаціями, які можуть виникнути під час мережевої передачі.

Обробка даних з API:
Напишіть програму, яка отримує дані з публічного API, наприклад, з веб-сервісу, який надає інформацію про погоду. Обережно обробіть випадок, коли з'єднання з API не вдалося або відповідь від сервера має некоректний формат. 